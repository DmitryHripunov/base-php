<?php
// А теперь все вместе, массивы, операторы, циклы, условные конструкции. Почувствуйте себя программистом

// 1. Забастовка курьеров.
// Шел конец мая, на улице светило солнышко, никому не хотелось работать, а вот водички попить, никто не отказывается.
// Сегодня 13 число - понедельник. Мы работаем в курьерской службе доставки питьевой воды, и нам в доставку 100 заказов, на последующие 10 дней (с 14 по 24).
// Стоимость каждого заказа это случайное число от 100 до 5000 руб.
// И все бы ничего, мы предвкушаем прибыли, но... Всегда есть какое-то но. Наши курьеры устроили забастовку, говорят: "НЕ будем работать в выходные".
// Делать нечего, будем считать убытки.
// Создайте, пожалуйста, нам массив с данными по заказам orders, он нам очень нужен для отчетности.
// Для каждого заказа нам нужно знать сумму и дату его доставки. Какие товары в заказах, нам пока знать не надо, но потом может понадобится.
$orders = [];
// Посчитайте нам, пожалуйста, сколько мы могли бы заработать
$profit = 0;
// а еще, посчитайте, сколько мы не доставим заказов из-за этих лодырей
$lossOrdersInWeekends = 0;
// а еще, посчитайте, сколько мы потеряем денег
$lossInWeekends = 0;
// и покажите нам отчет, в виде строки "Заказов {} на сумму: {}. Из них профукано {} заказов на сумму: {}"
// # С помощью цикла for вы создайте такой массив и сделайте его ассоциативным массивом с данными о заказах
// # Выходные будут 18 и 19 число



// 2. Отчет для HR-ов
// Вы хорошо потрудились, а вот мы не очень. Курьеры у нас не только отказываются работать по выходным, так еще и не могут доставить более 1 заказа в день.
// А у нас работает всего только 3 курьера.
$couriersCount = 3;
// Выведите нам для начальства и HR строку: "Для того, чтобы доставить все заказы, минимальное количество курьеров: {}"
// Только учтите, что мы все еще не можем ничего доставлять в выходные
$minCouriers = 0;
// # Удобным решением будет создать новый массив на основе существующего, где ключом будет являться номер дня, а значением - массив из цен заказов
// # Что-то в таком духе: [23 => [123, 2424, 5000, 100, 233]]
// # Не забудьте исключить выходные из рассчета



// 3. Отчет для начальства
// Спасибо вам большое, но досталось нам от начальства крепко. Курьеров, то мы еще наймем, но где ж их в мае сыщешь, так что это будет уже поздно.
// Начальство требует отчет, сколько мы профукаем еще, с учетом, что не можем добавить все, а клиенты у нас очень сердитые, и не хотят доставку в другой день.
// Выведите нам для начальства и строку: "Заказов профукано из-за недостатка курьеров: {}"
$lossOrdersBecauseFewCouriers = 0;
// # Не забудьте исключить выходные из рассчета


// 4. Спасаемся как можем
// Делать нечего, а еще начальство сказало: "если все заказы доставить не можем в какой-то день, то везите самые дорогие"
// Мы знаем, что вы еще не проходили функции для сортировки, но тут без них не обойтись

$lossBecauseFewCouriers = 0;
// Выведите нам для начальства и строку: "Заказов профукано из-за недостатка курьеров {} на сумму: {}"
// # Чтоб отсортировать массив по убыванию его значений есть функция rsort, но она не работает с многомерными массивами.
// # Поэтому сортируйте ей именно массив с ценами заказов, берите самые дорогие сверху и отдавайте курьерам
// # Можно обойтись и без функции сортировки - находите самую больше цену - вырезаете ее из массива, и так 3 раза, а остальное считаете



// 5. Итоговый отчет
// Меня, конечно, уволят, но вы, выведите пожалуйста итоговый отчет:
// "Заказов {} на сумму: {}. Из них профукано в выходные {} заказов на сумму: {}. А также профукано из-за недостатка курьеров {} на сумму: {}"
// "Итого заказов доставлено {} из {}, денег заработано {} из {}"
// # результат = всего - потеряно в выходные - потеряно из-за недостатка курьеров
